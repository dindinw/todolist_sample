<configuration>

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>
  
  <appender name="MyConsole" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%date %-5level [%thread] %logger{36} [:%method:%line] %msg%n</pattern>
    </encoder>
  </appender>
  
  <appender name="FilteredConsole" class="ch.qos.logback.core.ConsoleAppender">
    <filter class="io.dindinw.test.logback.ForceLogFilterTest$ForceLogFilter" />
    <encoder>
      <pattern>[%-5level] %msg%n</pattern>
    </encoder>
  </appender>
  
   <appender name="StructuredMarkerConsole" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>[%-5level] %marker %msg%n</pattern>
    </encoder>
  </appender>
  
  <turboFilter class="io.dindinw.test.logback.ForceLogFilterTest$ForceLogTurboFilter">
    <targetLogger>io.dindinw.test.logback.ForceLog</targetLogger>
    <doFilter>false</doFilter>
  </turboFilter>
  
  <root level="info">
    <appender-ref ref="STDOUT" />
  </root>
  
  <!-- set the additivity to false will let the appenders from the logger's parent,
       the root logger in the case, stop working. so that we don't print two lines
       with different format pattern in the console.
       see http://logback.qos.ch/manual/architecture.html#additivity for details -->
  <logger name="io.dindinw.test.logback.Hello" level="info" additivity="false">
    <appender-ref ref="MyConsole" />
  </logger>
  
  <logger name="io.dindinw.test.logback.ForceLog" level="info" additivity="false">
    <appender-ref ref="FilteredConsole" />
  </logger>
  
  <logger name="io.dindinw.test.logback.StructuredMarker" level="info" additivity="false">
    <appender-ref ref="StructuredMarkerConsole" />
  </logger>

</configuration>